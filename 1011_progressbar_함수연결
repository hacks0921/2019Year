import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import QBasicTimer
import os
import shutil
from openpyxl import load_workbook


class MyWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUI()

    def setupUI(self):
        #윈도우 만들기
        self.setGeometry(800, 400, 300, 150) # 위치, 크기
        self.setWindowTitle('서종학')

        # 상태Bar 만들기
        self.statusBar = QStatusBar(self)
        self.setStatusBar(self.statusBar)

        # 라벨/텍스트박스/버튼 만들기
        label = QLabel("경로입력:", self)
        label.move(20, 20) # Label 위치

        self.lineEdit = QLineEdit("입력", self)
        self.lineEdit.move(100, 20) # Text 입력 위치

        self.btn = QPushButton('시작', self)
        self.btn.move(40, 60)  # 버튼 위치
        self.btn.clicked.connect(self.doAction)   # doAction에 연결하기

        # pbar 만들기
        self.pbar = QProgressBar(self)
        self.pbar.setGeometry(30, 100, 200, 25)  # 위치, 크기

        # Qbasic Timer 불러오기
        self.timer = QBasicTimer()
        self.step = 0


    def doAction(self):
        # lineEdit의 텍스트를 받아서 상태 바에 뿌려주기
        self.test = self.lineEdit.text()
        data_dir = self.test
        self.statusBar.showMessage(self.lineEdit.text())
        print(self.test)

        # Progress Bar 올리기
        # self.pbar.setValue(self.step)
        # i = 0
        # for k in range(1000000):
        #     i = i +1
        #     print(i)
        #     self.pbar.setValue(100 * (i / 1000000))


        # load excel and data picking according to the given condition
        # file_name = load_workbook('D:/Python/Study/1009/1010_P9 TEST.xlsx')
        file_name = load_workbook("./" + data_dir + ".xlsx")
        worksheet = file_name['Sheet1']  # sheet name or sheet number or list of sheet numbers and names

        count = 0
        fail = 0
        g_count = 0
        n_count = 0

        for row in worksheet.iter_rows():
            count += 1
            self.pbar.setValue(100 * (count / worksheet.max_row))
            # print(count)
            img_path = row[0].value  # 파일 경로 설정
            if os.path.isfile(img_path):
                dir_path = './' + row[1].value + '_' + row[2].value  # 저장 경로 생성
                if not os.path.exists(dir_path):  # 저장 경로가 없으면 신규 생성
                    os.mkdir(dir_path)
                name = os.path.split(row[0].value)  # 파일 경로 분리
                name = os.path.splitext(name[1])  # 파일 확장자 분리
                save_path = dir_path + '/' + name[0] + "_" + row[3].value + "-" + row[4].value + name[1]  # 저장 경로 설정
                # 저장 경로 + 파일 이름  + 추가하고싶은 이름                     + 확장자명(name[1])
                shutil.copy2(img_path, save_path)  # 파일 경로에 있는 이미지를 해당 폴더로 이동

            else:
                print("FAIL : ", img_path)
                fail += 1
        #
        print("total iamges : {:5d}, fail images : {:5d}".format(count, fail))




if __name__ == "__main__":
    app = QApplication(sys.argv)
    mywindow = MyWindow()
    mywindow.show()
    app.exec_()
