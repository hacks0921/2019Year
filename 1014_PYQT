import sys
from PyQt5 import QtWidgets
from PyQt5 import uic
import os
import openpyxl
from openpyxl import Workbook
from openpyxl.drawing.image import Image
from openpyxl import load_workbook
import shutil

class Form(QtWidgets.QDialog):
    def __init__(self, parent=None):
        QtWidgets.QDialog.__init__(self, parent)
        self.ui = uic.loadUi("1012_QT_UI_V0.1.ui")
        self.ui.pushButton_1.clicked.connect(self.doAction_1)
        self.ui.pushButton_2.clicked.connect(self.doAction_2)
        # self.ui.pushButton_3.clicked.connect(self.doAction_3)
        # self.ui.pushButton_4.clicked.connect(self.doAction_4)
        self.ui.show()

    def doAction_1(self):

        print("doAction_1")
        xlsx_dir = self.ui.lineEdit_1.text()
        print(xlsx_dir)
        file_name = load_workbook("./" + xlsx_dir + ".xlsx")
        worksheet = file_name['Sheet']  # sheet name or sheet number or list of sheet numbers and names

        count = 0
        fail = 0
        g_count = 0
        n_count = 0
        for row in worksheet.iter_rows():
            count += 1
            # print(count)
            img_path = row[0].value  # 파일 경로 설정
            if os.path.isfile(img_path):
                # dir_path = './' + row[1].value + '_' + row[2].value  # 저장 경로 생성
                dir_path = './' + str(row[1].value) + '_' + str(row[2].value)  # 저장 경로 생성
                if not os.path.exists(dir_path):  # 저장 경로가 없으면 신규 생성
                    os.mkdir(dir_path)
                name = os.path.split(row[0].value)  # 파일 경로 분리
                name = os.path.splitext(name[1])  # 파일 확장자 분리
                save_path = dir_path + '/' + name[0] + "_" + row[3].value + "-" + row[4].value + name[1]  # 저장 경로 설정
                # 저장 경로 + 파일 이름  + 추가하고싶은 이름                     + 확장자명(name[1])
                shutil.copy2(img_path, save_path)  # 파일 경로에 있는 이미지를 해당 폴더로 이동
            else:
                print("FAIL : ", img_path)
                fail += 1
            self.ui.progressBar_1.setValue(100 * ((count + 1) / worksheet.max_row))

        print("total iamges : {:5d}, fail images : {:5d}".format(count, fail))
        print("완료")
        self.ui.pushButton_1.setText('완료')


    def doAction_2(self):
        print("doAction_2")
        img_dir = self.ui.lineEdit_2.text()

        # 1. 이미지 파일 폴더 리스트 생성-----------------------------------------------------------------
        filenames = os.listdir(img_dir)
        print(filenames)

        # 2. 이미지 파일 리스트, 경로 엑셀 저장-----------------------------------------------------------
        wb = Workbook()  # 워크북 열기
        ws = wb['Sheet']  # Sheet 활성화

        for i in range(len(filenames)):
            ws.cell(row=i + 1, column=1).value = i
            ws.cell(row=i + 1, column=2).value = filenames[i]
            ws.cell(row=i + 1, column=3).value = img_dir + '/' + filenames[i]
            # ws.cell(row=i + 1, column=4).value = os.path.join(img_dir, filenames[i])
            ws.row_dimensions[i + 1].height = 70  # 높이 변경
            img_path = ws.cell(row=i + 1, column=3).value

            # 3. 경로에 따른 이미지 파일 엑셀 붙이기  : 반복구문-------------------------------------------
            ext = os.path.splitext(img_path)[-1]
            print(ext)
            if ext == '.jpg':
                img = openpyxl.drawing.image.Image(img_path)  # 이미지 불러오기
                img.width = 150
                img.height = 100
                img.anchor = ws.cell(row=i + 1, column=4).coordinate  # 이미지 넣기
                ws.add_image(img)
                print(i)
                print(len(filenames))

            #3-1 Progress bar 증가 ------------------------------------------------------------------
                self.ui.progressBar_2.setValue(100 * ((i+1) / len(filenames)))

        # 4. 저장-----------------------------------------------------------------------------------------
        ws.column_dimensions['E'].width = 20  # 폭 변경
        wb.save("img_name_path_picture.xlsx")
        print("완료")
        self.ui.pushButton_2.setText('완료')


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    w = Form()
    sys.exit(app.exec())
